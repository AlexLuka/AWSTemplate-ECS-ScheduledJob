name: Deployment

on:
  push:
    branches: [dev, main]

env:
  AWS_REGION: us-east-1
  ECR_REPO_NAME: templates-scheduled-job

permissions:
      id-token: write
      contents: read

jobs:
  build:
    name: "Build docker image"
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: temporary
        name: Print some variables
        run: |
          echo ${GITHUB_SHA}
          echo ${GITHUB_REF}

      - id: aws-configure
        name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.GHA_ASSUMED_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

# This was an intermediate step to check if identity policy works
#      - name: Sts GetCallerIdentity
#        run: |
#          aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

#      - id: build
#        uses: docker/setup-buildx-action@v3
#        env:
#          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
#          ECR_REPOSITORY: ${{ env.ECR_REPO_NAME }}
#        with:
#          context: .
#          build-args: ${GITHUB_SHA}
#          tags:
#            - ${{ECR_REGISTRY}}/${ECR_REPOSITORY}-${GITHUB_SHA}

# TODO
#   Create the image with two tags: one must be associated with github sha
#   The other one will be "latest" - the one that is use in production
#   Every time when new "latest" is pushed the previous one detached from "latest" tag,
#   but keep the "sha" one

# This is temporary workaround until I figure out what I need, then move to the docker/setup-buildx-action@v3
      - id: build-and-push
        name: push image to Amazon ECR
        shell: bash
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: ${{ env.ECR_REPO_NAME }}
          IMAGE_TAG: today-${{ github.sha }}
        run: |
          docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" --build-arg GITHUB_SHA_ARG=$GITHUB_SHA .
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG" 
          echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"